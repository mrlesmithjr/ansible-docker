---
- name: redhat_repository_yum | Adding Docker repo
  loop: "{{ docker_redhat_yum_repo_info | default([], true) }}"
  ansible.builtin.yum_repository:
    file: docker
    name: "{{ item.key }}"
    description: "{{ item.name }}"
    baseurl: "{{ item.baseurl }}"
    enabled: "{{ item.enabled | default(omit) }}"
    gpgcheck: "{{ item.gpgcheck | default(omit) }}"
    gpgkey: "{{ item.gpgkey | default(omit) }}"
  become: true
  when:
    - item.key is defined
    - item.name is defined
    - item.baseurl is defined

- name: redhat_repository_yum | Checking for existing docker # noqa: command-instead-of-module
  ansible.builtin.command: "rpm -q '{{ docker_redhat_yum_check_package }}'"
  ignore_errors: true
  register: has_docker
  changed_when: false

- name: redhat_repository_yum | Installing Docker versioned
  ansible.builtin.package:
    name: "{{ docker_redhat_package_present_versioned_packages }}"
    state: present
  become: true
  register: result
  until: result is successful
  when:
    - docker_version | lower != "latest" and docker_version | lower != "any"

- name: redhat_repository_yum | Installing Docker latest
  ansible.builtin.package:
    name: "{{ docker_redhat_package_present_latest_packages }}"
    state: present
  become: true
  register: result
  until: result is successful
  when: >
    docker_version | lower == "latest"
    or (docker_version | lower == "any" and has_docker is failed)
