---
- name: debian | updating apt-cache
  apt:
    update_cache: true
    cache_valid_time: 86400
  become: true
  register: result
  until: result is successful

- name: debian | installing pre-reqs
  apt:
    name: "{{ docker_debian_apt_pre_reqs }}"
    state: present
  become: true
  register: result
  until: result is successful
  when:
    - docker_debian_apt_pre_reqs | default([],true) | length > 0

- name: debian | installing repository by apt-key apt-repository
  include_tasks: debian_repository_apt.yml
  when:
    - docker_debian_repo_type | default('apt') == 'apt'

- name: debian | installing repository by deb822-repository
  include_tasks: debian_repository_deb822.yml
  when:
    - docker_debian_repo_type | default('apt') == 'deb822'

# We remove docker-engine as this is old package to install. The new package is
# docker-ce
- name: debian | uninstalling old docker packages (if exists)
  apt:
    name:
      - containerd
      - docker
      - docker-engine
      - docker.io
      - lxc-docker
      - runc
    state: absent
    purge: true
  become: true
  register: result
  until: result is successful

- name: debian | checking for existing docker # noqa 305
  shell: dpkg-query -W 'docker-ce'
  ignore_errors: true
  register: has_docker
  changed_when: false

- name: debian | installing docker
  apt:
    name:
      - containerd.io
      - "docker-ce={{ docker_version_debian }}"
    state: present
  become: true
  register: result
  until: result is successful
  when:
    - docker_version|lower != "latest"
    - has_docker is failed

- name: debian | installing docker
  apt:
    name:
      - containerd.io
      - docker-ce
    state: present
  become: true
  register: result
  until: result is successful
  when:
    - docker_version|lower == "latest"
    - has_docker is failed

- name: debian | Checking For /etc/default/grub
  stat:
    path: /etc/default/grub
  register: _docker_grub_check

- name: debian | setting grub memory limit (if set)
  lineinfile:
    dest: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="cgroup_enable=memory swapaccount=1"'
  register: grub_updated
  become: true
  when:
    - _docker_grub_check['stat']['exists']
    - docker_debian_set_grub_memory_limit is defined
    - docker_debian_set_grub_memory_limit

- name: debian | updating grub (if updated) # noqa 503
  command: update-grub
  become: true
  when: grub_updated['changed']

- name: debian | Installing bridge-utils
  apt:
    name: bridge-utils
    state: present
  become: true
  register: result
  until: result is successful
  when:
    - docker_install_bridge_utils is defined
    - docker_install_bridge_utils
