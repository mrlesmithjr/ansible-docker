---
name: Molecule Test
on:
  push:
    branches:
    - '*'
  workflow_dispatch:
defaults:
  run:
    working-directory: 'docker'
jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        molecule_distro:
          - centos7
          - centos8
          # debian8 only have python 3.4 version too old for ansible-core 2.11
          # - debian8
          - debian9
          - debian10
          # `jrei/systemd-fedora:latest` rolling release image too new for this
          # - fedora
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
        python-version:
          - "3.8"
          - "3.11"
        runs-on:
          - ubuntu-20.04
          - ubuntu-24.04
        exclude:
          - molecule_distro: ubuntu1604
            python-version: "3.8"
            runs-on: ubuntu-24.04
          - molecule_distro: ubuntu1604
            python-version: "3.11"
            runs-on: ubuntu-24.04
        include:
          - runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
          - runs-on: ubuntu-24.04
            cgroup: '@cgroupv2'
          - python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible211"
            # Fix `ERROR! Unexpected Exception, this is probably a bug: '/api/v3/plugin/ansible/content/published/collections/index/community/docker/versions/'`
            # see https://github.com/ansible/awx/issues/14495#issuecomment-1752708302
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible216"
            ansible-config: ""

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: 'docker'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.group-python }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.group-python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-${{ matrix.group-python }}.txt

      - name: Run pre-commit checks
        run: |
          SKIP=no-commit-to-branch pre-commit run --all-files

      - name: Test with molecule
        run: |
          pip-install-dependency-groups requests ${{ matrix.group-ansible }}
          molecule test --scenario-name ${{ matrix.molecule_distro }}${{ matrix.cgroup }}
        env:
          ANSIBLE_CONFIG: ${{ matrix.ansible-config }}
