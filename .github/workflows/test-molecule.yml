---
name: Molecule Test
on:
  push:
    branches:
    - '*'
  workflow_dispatch:
defaults:
  run:
    working-directory: 'docker'
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        molecule_distro:
          - centos7
          - centos8
          - rockylinux8
          - rockylinux9
          - almalinux8
          - almalinux9
          # debian8 only have python 3.4 version too old for ansible-core 2.11
          # - debian8
          - debian9
          - debian10
          - debian11
          - debian12
          - debian13
          # `jrei/systemd-fedora:latest` rolling release image too new for this
          # - fedora
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          - ubuntu2204
          - ubuntu2404
          - opensuseleap15
          - amazonlinux2
          - amazonlinux2023
          - alpine317
          - alpine318
          - alpine319
          - alpine320
          - alpine321
          - fedora24
          - fedora27
          - fedora29
          - fedora30
          - fedora31
          - fedora32
          - fedora33
        # Only test the oldest supported Python and Ansible versions on the oldest GitHub Action runner.
        # For other tests, refer to the Tox tests.
        include:
          - molecule_distro: centos7
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: centos8
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: rockylinux8
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: rockylinux9
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible210"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: almalinux8
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible210"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: almalinux9
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible210"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: debian9
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: debian10
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: debian11
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: debian12
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: debian13
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible218"
          - molecule_distro: ubuntu1604
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: ubuntu1604
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: ubuntu1804
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: ubuntu2004
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: ubuntu2204
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: ubuntu2404
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible216"
          - molecule_distro: opensuseleap15
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: amazonlinux2
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: amazonlinux2023
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible210"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: alpine317
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible212"
          - molecule_distro: alpine318
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible214"
          - molecule_distro: alpine319
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible214"
          - molecule_distro: alpine320
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv2'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible216"
          - molecule_distro: alpine321
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv2'
            python-version: "3.11"
            group-python: "py311"
            group-ansible: "ansible216"
          - molecule_distro: fedora24
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: fedora27
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: fedora29
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
          - molecule_distro: fedora30
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: fedora31
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: fedora32
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible29"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"
          - molecule_distro: fedora33
            runs-on: ubuntu-20.04
            cgroup: '@cgroupv1'
            python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible210"
            ansible-config: "./molecule/ansible.old-galaxy.cfg"

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: 'docker'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.group-python }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.group-python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-${{ matrix.group-python }}.txt

      - name: Run pre-commit checks
        run: |
          SKIP=no-commit-to-branch pre-commit run --all-files

      - name: Test with molecule
        run: |
          pip-install-dependency-groups requests ${{ matrix.group-ansible }}
          python tox-ansible-v2-faked-galaxy-role-installer.py
          molecule test --scenario-name ${{ matrix.molecule_distro }}${{ matrix.cgroup }}
        env:
          ANSIBLE_CONFIG: ${{ matrix.ansible-config }}
