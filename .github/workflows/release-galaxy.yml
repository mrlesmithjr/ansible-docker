---
name: Ansible Galaxy
on:
  push:
    branches:
    - main
    - master
    - 'releases/**'
    tags:
    - '*'
  pull_request:
    branches:
    - main
    - master
    - 'releases/**'

jobs:
  galaxy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipx
          pipx ensurepath
          pipx install poetry
          pipx inject poetry poetry-plugin-export
          poetry install
      - name: Trigger a new import on Galaxy.
        run: ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} mrlesmithjr ansible-docker
