---
name: Ansible Galaxy
on:
  push:
    branches:
    - main
    - master
    - 'releases/**'
    tags:
    - '*'
  pull_request:
    branches:
    - main
    - master
    - 'releases/**'

jobs:
  galaxy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
        include:
          - python-version: "3.8"
            group-python: "py38"
            group-ansible: "ansible211"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.group-python }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.group-python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-${{ matrix.group-python }}.txt
          pip-install-dependency-groups requests ${{ matrix.group-ansible }}

      - name: Trigger a new import on Galaxy.
        run: ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
